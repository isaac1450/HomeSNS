<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.ssafy.homesns.dao.CommentDao">

	<insert id="commentCreate" parameterType="com.ssafy.homesns.dto.CommentDto" useGeneratedKeys="true" keyProperty="commentId">
		INSERT INTO COMMENT ( FEED_ID,    COMMENT_AUTHOR,    COMMENT_CONTENT,  COMMENT_UPLOAD_DATE   )
		             VALUES ( #{feedId},   #{commentAuthor},  #{commentContent},       now() )
	</insert>
	
	<insert id="commentTagCreate" parameterType="map" >
		INSERT INTO COMMENT_TAG ( COMMENT_ID,    COMMENT_TAG)
		             VALUES ( #{commentId},  #{commentTagSeq} )
	</insert>
	
	
<!-- 	감정 기능
	댓글 가져오는 SQL 
	<select id="commentList" parameterType="map" resultType="com.ssafy.homesns.dto.CommentDto"> 
		SELECT c.comment_id,feed_id,comment_tag as comment_tag_seq, u2.user_name as comment_tag_name, comment_author as comment_author_seq, u1.user_name as comment_author,comment_content,comment_upload_date, 
				ce.good, ce.sad, ce.check, ce.fun , ce.amaze, ceu.EMOTION_CODE as code
		FROM HOME_SNS.COMMENT c
        JOIN HOME_SNS.USER u1 ON c.comment_author = u1.user_seq 
        JOIN HOME_SNS.USER u2 ON c.comment_tag = u2.user_seq 
        LEFT OUTER JOIN HOME_SNS.COMMENT_EMOTION ce ON c.comment_id = ce.comment_id  
        LEFT OUTER JOIN HOME_SNS.COMMENT_EMOTION_USER_USE ceu ON ce.COMMENT_ID = ceu.COMMENT_ID AND ceu.USER_SEQ = #{userSeq}
       WHERE feed_id = #{feedId}
       LIMIT #{limit} OFFSET #{offset}
	</select>
 -->	

<!-- 댓글 불러오기 -->
	<select id="commentSearch" parameterType="int" resultType="com.ssafy.homesns.dto.CommentDto"> 
		SELECT c.COMMENT_ID,FEED_ID, COMMENT_AUTHOR as comment_author_seq, u1.USER_NAME as comment_author,COMMENT_CONTENT,COMMENT_UPLOAD_DATE,
		u1.USER_PROFILE_IMAGE_URL as commentUserProfileImageUrl
		FROM HOME_SNS.COMMENT c
        JOIN HOME_SNS.USER u1 ON c.COMMENT_AUTHOR = u1.USER_SEQ 
       WHERE COMMENT_ID = #{commentId}
	</select>



<!-- 댓글리스트 불러오기  -->
	<select id="commentList" parameterType="map" resultType="com.ssafy.homesns.dto.CommentDto"> 
		SELECT c.comment_id,feed_id, comment_author as comment_author_seq, u1.user_name as comment_author,comment_content,comment_upload_date,
		u1.USER_PROFILE_IMAGE_URL as commentUserProfileImageUrl
		FROM HOME_SNS.COMMENT c
        JOIN HOME_SNS.USER u1 ON c.comment_author = u1.user_seq 
       WHERE feed_id = #{feedId}
       LIMIT #{limit} OFFSET #{offset}
	</select>
 
 <!-- 댓글 태그 리스트 불러오기 -->
 	<select id="commentTagList" parameterType="int" resultType="String"> 
		SELECT USER_NAME as  CommentTagName
		  FROM  COMMENT_TAG ct 
		  JOIN USER u 
		    ON ct.COMMENT_TAG = u.USER_SEQ
		 WHERE COMMENT_ID = #{commentId}
	</select>
 
	<update id="commentUpdate" parameterType="com.ssafy.homesns.dto.CommentDto">
		UPDATE COMMENT
		   SET COMMENT_CONTENT = #{commentContent}
		 WHERE COMMENT_ID = #{commentId}
	</update>
	
	<delete id="commentDelete" parameterType="int">
		DELETE FROM COMMENT WHERE COMMENT_ID = #{commentId}
	</delete>
	
	
	<insert id="commentEmotionCreate" parameterType="int" >
		INSERT INTO COMMENT_EMOTION ( COMMENT_ID,    GOOD,    SAD,    CHECK,    FUN,    AMAZE    )
		                     VALUES ( #{commentId},  #{good}, #{sad}, #{check}, #{fun}, #{amaze} )
	</insert>
	
	<select id="commentEmotionSearch" parameterType="int" resultType="com.ssafy.homesns.dto.CommentDto">
		SELECT COMMENT_ID as commentId, GOOD as good, SAD as sad, 
			   CHECK as check, FUN as fun, AMAZE as amaze
		  FROM COMMENT_EMOTION
		 WHERE COMMENT_ID = #{commentId}
	</select>
	
	
	<update id="commentGoodAdd" parameterType="int">
		UPDATE COMMENT_EMOTION
		   SET GOOD = GOOD + 1
		 WHERE COMMENT_ID = #{commentId}
	</update>
	
	<update id="commentGoodSub" parameterType="int">
		UPDATE COMMENT_EMOTION
		   SET GOOD = GOOD - 1
		 WHERE COMMENT_ID = #{commentId}
	</update>
	
	<update id="commentSadAdd" parameterType="int">
		UPDATE COMMENT_EMOTION
		   SET SAD = SAD + 1
		 WHERE COMMENT_ID = #{commentId}
	</update>
	
	<update id="commentSadSub" parameterType="int">
		UPDATE COMMENT_EMOTION
		   SET SAD = SAD - 1
		 WHERE COMMENT_ID = #{commentId}
	</update>
	
	<update id="commentCheckAdd" parameterType="int">
		UPDATE COMMENT_EMOTION
		   SET CHECK = CHECK + 1
		 WHERE COMMENT_ID = #{commentId}
	</update>
	
	<update id="commentCheckSub" parameterType="int">
		UPDATE COMMENT_EMOTION
		   SET CHECK = CHECK - 1
		 WHERE COMMENT_ID = #{commentId}
	</update>
	
	<update id="commentFunAdd" parameterType="int">
		UPDATE COMMENT_EMOTION
		   SET FUN = FUN + 1
		 WHERE COMMENT_ID = #{commentId}
	</update>
	
	<update id="commentFunSub" parameterType="int">
		UPDATE COMMENT_EMOTION
		   SET FUN = FUN - 1
		 WHERE COMMENT_ID = #{commentId}
	</update>
	
	<update id="commentAmazeAdd" parameterType="int">
		UPDATE COMMENT_EMOTION
		   SET AMAZE = AMAZE + 1
		 WHERE COMMENT_ID = #{commentId}
	</update>
	
	<update id="commentAmazeSub" parameterType="int">
		UPDATE COMMENT_EMOTION
		   SET AMAZE = AMAZE - 1
		 WHERE COMMENT_ID = #{commentId}
	</update>
	
	<delete id="commentEmotionDelete" parameterType="int" >
		DELETE FROM COMMENT_EMOTION 
		      WHERE COMMENT_ID = #{commentId}
	</delete>
	
	
	
	<insert id="commentEmotionUserUseCreate" parameterType="com.ssafy.homesns.dto.CommentEmotionDto" >
		INSERT INTO COMMENT_EMOTION_USER_USE ( COMMENT_ID,    USER_SEQ,    EMOTION_CODE )
		                              VALUES ( #{commentId},  #{userSeq},  #{code}      )
	</insert>
	
	<select id="commentEmotionUserUseSearch" parameterType="com.ssafy.homesns.dto.CommentEmotionDto" resultType="com.ssafy.homesns.dto.CommentEmotionDto">
		SELECT COMMENT_ID as commentId, USER_SEQ as userSeq, EMOTION_CODE as code
		  FROM COMMENT_EMOTION_USER_USE
		 WHERE COMMENT_ID = #{commentId}
		   AND USER_SEQ = #{userSeq}
	</select>
	
	<delete id="commentEmotionUserUseDelete" parameterType="com.ssafy.homesns.dto.CommentEmotionDto" >
		DELETE FROM COMMENT_EMOTION_USER_USE 
		      WHERE COMMENT_ID = #{commentId}
		        AND USER_SEQ = #{userSeq}
	</delete>
</mapper>