
CREATE TABLE `USER` (
	`USER_SEQ`	INT	NOT NULL PRIMARY KEY AUTO_INCREMENT,
	`USER_ID`	VARCHAR(50)	NULL UNIQUE , 
	`USER_PASSWORD`	VARCHAR(300)	NOT NULL,
	`USER_EMAIL`	VARCHAR(50)	NULL UNIQUE,
	`USER_NAME`	VARCHAR(50)	NOT NULL,
	`USER_NICKNAME`	VARCHAR(50)	NULL,
	`USER_PHONE`	VARCHAR(50)	NULL UNIQUE,
	`USER_BOD`	DATE	NULL,
	`USER_PROFILE_IMAGE_URL`	VARCHAR(300)	NULL DEFAULT "IMAGE/NOIMAGE.PNG",
	`USER_REGISTER_DATE`	TIMESTAMP	NULL,
	`USER_CLS`	CHAR(5)	NULL,
	`REFRESH_TOKEN`	VARCHAR(50)	NULL
);

CREATE TABLE `FEED` (
	`FEED_ID`	INT	NOT NULL PRIMARY KEY AUTO_INCREMENT,
	`GROUP_ID`	INT	NOT NULL ,
	`FEED_AUTHOR`	INT	NULL,
	`FEED_TITLE`	VARCHAR(50)	NULL,
	`FEED_CONTENT`	VARCHAR(1000)	NULL,
	`FEED_UPLOAD_DATE`	TIMESTAMP	NULL,
	`FEED_EVENT_DATE`	DATETIME	NULL,
	`FEED_LOCATION_ID` INT	NULL
);

CREATE TABLE `GROUP_CODE` (
	`GROUP_CODE`	CHAR(3) NOT NULL PRIMARY KEY,
	`GROUP_CODE_NAME`	VARCHAR(20)	NULL UNIQUE
);

CREATE TABLE `CODE` (
	`CODE`	CHAR(2) NOT NULL PRIMARY KEY,
	`GROUP_CODE`	CHAR(3) NULL,
	`CODE_NAME`	VARCHAR(20)	NULL UNIQUE,
	`USE_YN`	VARCHAR(1)	NULL DEFAULT "N"
);

CREATE TABLE `HASHTAG` (
	`HASHTAG_SEQ`	INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	`FEED_ID`	INT	NOT NULL,
	`HASHTAG_CONTENT`	VARCHAR(50)	NOT NULL
);

CREATE TABLE `GROUP_LIST` (
	`GROUP_ID`	INT	NOT NULL PRIMARY KEY AUTO_INCREMENT,
	`GROUP_NAME`	VARCHAR(50)	NULL,
	`GROUP_PROFILE_IMAGE_URL`	VARCHAR(300)	NULL DEFAULT "IMAGE/NOGROUPIMAGE.PNG",
	`GROUP_LEADER_SEQ`	INT	NOT NULL,
	`GROUP_PASSWORD`	VARCHAR(200)	NULL
);

CREATE TABLE `GROUP_MEMBER` (
	`GROUP_ID`	INT	NOT NULL,
	`USER_SEQ`	INT	NOT NULL,
	`MANAGER_YN`	CHAR(1)	NULL DEFAULT "N"
);

CREATE TABLE `SCHEDULE` (
    `SCHEDULE_ID`    INT    NOT NULL PRIMARY KEY AUTO_INCREMENT,
    `GROUP_ID`    INT    NOT NULL,
    `SCHEDULE_TITLE`    VARCHAR(50)    NULL,
    `SCHEDULE_CONTENT`    VARCHAR(300)    NULL,
    `SCHEDULE_DATE_START`    DATE    NOT NULL,
    `SCHEDULE_DATE_END`    DATE    NOT NULL,
    `SCHEDULE_TIME_START`    TIME    NULL,
    `SCHEDULE_TIME_END`    TIME    NULL
);


CREATE TABLE `COMMENT` (
	`COMMENT_ID`	INT	NOT NULL PRIMARY KEY AUTO_INCREMENT,
	`FEED_ID`	INT	NOT NULL,
	`COMMENT_TAG`	INT	NULL,
	`COMMENT_AUTHOR`	INT	NULL,
	`COMMENT_CONTENT`	VARCHAR(300)	NULL,
	`COMMENT_UPLOAD_DATE`	TIMESTAMP	NULL
);

CREATE TABLE `FEED_EMOTION` (
	`FEED_ID`	INT	NOT NULL ,
	`GOOD`	INT	NULL,
	`SAD`	INT	NULL,
	`CHECK`	INT	NULL,
	`FUN`	INT	NULL,
	`AMAZE`	INT	NULL
);

CREATE TABLE `COMMENT_EMOTION` (
	`COMMENT_ID`	INT	NOT NULL,
	`GOOD`	INT	NULL,
	`SAD`	INT	NULL,
	`CHECK`	INT	NULL,
	`FUN`	INT	NULL,
	`AMAZE`	INT	NULL
);

CREATE TABLE `FILE` (
	`FILE_ID`	INT	NOT NULL PRIMARY KEY AUTO_INCREMENT,
	`FEED_ID`	INT	NOT NULL,
	`FILE_NAME`	VARCHAR(100)	NULL,
	`FILE_SIZE`	FLOAT	NULL,
	`FILE_CONTENT_TYPE`	VARCHAR(50)	NULL,
	`FILE_URL`	VARCHAR(300)	NULL UNIQUE,
	`REG_DT`	TIMESTAMP	NULL
);

CREATE TABLE `SCRAP` (
	`USER_SEQ`	INT	NOT NULL,
	`FEED_ID`	INT	NOT NULL
);

CREATE TABLE `LOCATION` (
	`LOCATION_ID`	INT	NOT NULL PRIMARY KEY AUTO_INCREMENT,
	`GROUP_ID`	INT	NOT NULL,
	`LOCATION_NAME`	VARCHAR(100)	NULL,
	`LAT`	FLOAT	NULL,
	`LNG`	FLOAT	NULL
);

CREATE TABLE `LOCATION_FAVORITE` (
	`LOCATION_ID`	INT	NOT NULL  ,
	`USER_SEQ`	INT	NOT NULL
);


CREATE TABLE `FEED_EMOTION_USER_USE` (
	`USER_SEQ`	INT	NOT NULL,
	`FEED_ID`	INT	NOT NULL,
	`EMOTION_CODE`	CHAR(5)	NULL
);

CREATE TABLE `EVENT_MEMBER` (
	`FEED_ID`	INT	NOT NULL,
	`USER_SEQ`	INT	NOT NULL
);

CREATE TABLE `COMMENT_EMOTION_USER_USE` (
	`COMMENT_ID`	INT	NOT NULL,
	`USER_SEQ`	INT	NOT NULL,
	`EMOTION_CODE`	CHAR(5)	NULL
);

CREATE TABLE `GAME` (
	`GAME_ID`	INT	NOT NULL PRIMARY KEY AUTO_INCREMENT,
	`GROUP_ID`	INT	NOT NULL,
	`GAME_TITLE`	VARCHAR(50)	NOT NULL,
	`GAME_AUTHOR`	INT	NOT NULL,
	`GAME_REGISTER_DATE`	TIMESTAMP	NULL,
	`CODE` CHAR(5)	NOT NULL,
	`UPDATE_YN`	VARCHAR(1)	NULL DEFAULT "Y"
);

CREATE TABLE `GHOST_LEG` (
	`GAME_ID`	INT	NOT NULL,
	`PLAYER`	VARCHAR(100)	NOT NULL,
	`PLAYER_NUM`	INT	NOT NULL,
	`RESULT`	VARCHAR(100)	NOT NULL,
	`MAP`	VARCHAR(300)	NOT NULL
);

CREATE TABLE `VOTE_ITEM` (
	`VOTE_ITEM_ID`	INT	NOT NULL PRIMARY KEY AUTO_INCREMENT,
	`VOTE_ITEM_NAME`	VARCHAR(50)	NOT NULL,
	`GAME_ID`	INT	NOT NULL,
	`COUNT`	INT	NOT NULL DEFAULT 0
);

CREATE TABLE `VOTER` (
	`VOTE_ITEM_ID`	INT,
	`USER_SEQ`	INT	NOT NULL
);


CREATE TABLE `PROFILE_IMAGE` (
    `PROFILE_IMAGE_ID`    INT    NOT NULL PRIMARY KEY AUTO_INCREMENT,
	`USER_SEQ`     INT,
    `GROUP_ID`    INT,
    `PROFILE_IMAGE_NAME`    VARCHAR(50) NULL,
	`PROFILE_IMAGE_SIZE`    FLOAT NULL,
	`PROFILE_IMAGE_URL`    VARCHAR(20)    NULL,
    `REG_DT`    TIMESTAMP    NULL
);
CREATE TABLE `NOTICE` (
`NOTICE_ID`      INT    NOT NULL PRIMARY KEY AUTO_INCREMENT,
`USER_SEQ` INT,
`TARGET_USER_SEQ` INT,
`TARGET_USER_GROUP_ID` INT,
`NOTICE_TYPE`      VARCHAR(50),
`NOTICE_CONTENT_ID` INT,
`NOTICE_READ_YN` CHAR(1) DEFAULT "N",
`NOTICE_TIME` DATETIME
);

ALTER TABLE `FEED` ADD CONSTRAINT `FK_GROUP_TO_FEED_1` FOREIGN KEY (
	`GROUP_ID`
)
REFERENCES `GROUP_LIST` (
	`GROUP_ID`
);

ALTER TABLE `CODE` ADD CONSTRAINT `FK_GROUP_CODE_TO_CODE_1` FOREIGN KEY (
	`GROUP_CODE`
)
REFERENCES `GROUP_CODE` (
	`GROUP_CODE`
);

ALTER TABLE `HASHTAG` ADD CONSTRAINT `FK_FEED_TO_HASHTAG_1` FOREIGN KEY (
	`FEED_ID`
)
REFERENCES `FEED` (
	`FEED_ID`
)
ON DELETE CASCADE;

ALTER TABLE `GROUP_MEMBER` ADD CONSTRAINT `FK_GROUP_TO_GROUP_MEMBER_1` FOREIGN KEY (
	`GROUP_ID`
)
REFERENCES `GROUP_LIST` (
	`GROUP_ID`
);

ALTER TABLE `GROUP_MEMBER` ADD CONSTRAINT `FK_USER_TO_GROUP_MEMBER_1` FOREIGN KEY (
	`USER_SEQ`
)
REFERENCES `USER` (
	`USER_SEQ`
);

ALTER TABLE `SCHEDULE` ADD CONSTRAINT `FK_GROUP_TO_SCHEDULE_1` FOREIGN KEY (
	`GROUP_ID`
)
REFERENCES `GROUP_LIST` (
	`GROUP_ID`
);

ALTER TABLE `COMMENT` ADD CONSTRAINT `FK_FEED_TO_COMMENT_1` FOREIGN KEY (
	`FEED_ID`
)
REFERENCES `FEED` (
	`FEED_ID`
)
ON DELETE CASCADE;

ALTER TABLE `FEED_EMOTION` ADD CONSTRAINT `FK_FEED_TO_FEED_EMOTION_1` FOREIGN KEY (
	`FEED_ID`
)
REFERENCES `FEED` (
	`FEED_ID`
)
ON DELETE CASCADE;

ALTER TABLE `COMMENT_EMOTION` ADD CONSTRAINT `FK_COMMENT_TO_COMMENT_EMOTION_1` FOREIGN KEY (
	`COMMENT_ID`
)
REFERENCES `COMMENT` (
	`COMMENT_ID`
)
ON DELETE CASCADE;

ALTER TABLE `FILE` ADD CONSTRAINT `FK_FEED_TO_FILE_1` FOREIGN KEY (
	`FEED_ID`
)
REFERENCES `FEED` (
	`FEED_ID`
)
ON DELETE CASCADE;

ALTER TABLE `SCRAP` ADD CONSTRAINT `FK_USER_TO_SCRAP_1` FOREIGN KEY (
	`USER_SEQ`
)
REFERENCES `USER` (
	`USER_SEQ`
);

ALTER TABLE `SCRAP` ADD CONSTRAINT `FK_FEED_TO_SCRAP_1` FOREIGN KEY (
	`FEED_ID`
)
REFERENCES `FEED` (
	`FEED_ID`
)
ON DELETE CASCADE;

ALTER TABLE `LOCATION` ADD CONSTRAINT `FK_GROUP_TO_LOCATION_1` FOREIGN KEY (
	`GROUP_ID`
)
REFERENCES `GROUP_LIST` (
	`GROUP_ID`
);
ALTER TABLE  `FEED` ADD CONSTRAINT `FK_LOCATION_TO_FEED_1` FOREIGN KEY (
	`FEED_LOCATION_ID`
)
REFERENCES `LOCATION` (
	`LOCATION_ID`
);
ALTER TABLE `LOCATION_FAVORITE` ADD CONSTRAINT `FK_LOCATION_TO_LOCATION_FAVORITE_1` FOREIGN KEY (
	`LOCATION_ID`
)
REFERENCES `LOCATION` (
	`LOCATION_ID`
);

ALTER TABLE `LOCATION_FAVORITE` ADD CONSTRAINT `FK_USER_TO_LOCATION_FAVORITE_1` FOREIGN KEY (
	`USER_SEQ`
)
REFERENCES `USER` (
	`USER_SEQ`
);


ALTER TABLE `GAME` ADD CONSTRAINT `FK_GROUP_TO_GAME_1` FOREIGN KEY (
	`GROUP_ID`
)
REFERENCES `GROUP_LIST` (
	`GROUP_ID`
);


ALTER TABLE `GHOST_LEG` ADD CONSTRAINT `FK_GAME_TO_GHOST_LEG_1` FOREIGN KEY (
	`GAME_ID`
)
REFERENCES `GAME` (
	`GAME_ID`
)
ON DELETE CASCADE;

ALTER TABLE `VOTE_ITEM` ADD CONSTRAINT `FK_GAME_TO_VOTE_ITEM_1` FOREIGN KEY (
	`GAME_ID`
)
REFERENCES `GAME` (
	`GAME_ID`
)
ON DELETE CASCADE;

ALTER TABLE `VOTER` ADD CONSTRAINT `FK_VOTE_ITEM_TO_VOTER_1` FOREIGN KEY (
	`VOTE_ITEM_ID`
)
REFERENCES `VOTE_ITEM` (
	`VOTE_ITEM_ID`
)
ON DELETE CASCADE;

ALTER TABLE `FEED_EMOTION_USER_USE` ADD CONSTRAINT `FK_USER_TO_FEED_EMOTION_USER_USE_1` FOREIGN KEY (
	`USER_SEQ`
)
REFERENCES `USER` (
	`USER_SEQ`
);

ALTER TABLE `FEED_EMOTION_USER_USE` ADD CONSTRAINT `FK_FEED_TO_FEED_EMOTION_USER_USE_1` FOREIGN KEY (
	`FEED_ID`
)
REFERENCES `FEED` (
	`FEED_ID`
)
ON DELETE CASCADE;

ALTER TABLE `EVENT_MEMBER` ADD CONSTRAINT `FK_FEED_TO_EVENT_MEMBER_1` FOREIGN KEY (
	`FEED_ID`
)
REFERENCES `FEED` (
	`FEED_ID`
)
ON DELETE CASCADE;

ALTER TABLE `EVENT_MEMBER` ADD CONSTRAINT `FK_USER_TO_EVENT_MEMBER_1` FOREIGN KEY (
	`USER_SEQ`
)
REFERENCES `USER` (
	`USER_SEQ`
);

ALTER TABLE `COMMENT_EMOTION_USER_USE` ADD CONSTRAINT `FK_COMMENT_TO_COMMENT_EMOTION_USER_USE_1` FOREIGN KEY (
	`COMMENT_ID`
)
REFERENCES `COMMENT` (
	`COMMENT_ID`
)
ON DELETE CASCADE;

ALTER TABLE `COMMENT_EMOTION_USER_USE` ADD CONSTRAINT `FK_USER_TO_COMMENT_EMOTION_USER_USE_1` FOREIGN KEY (
	`USER_SEQ`
)
REFERENCES `USER` (
	`USER_SEQ`
);

